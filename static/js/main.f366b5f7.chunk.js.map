{"version":3,"sources":["Course.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Course","courses","courseId","useParams","map","el","id","description","price","dateOfBeginning","Home","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","length","console","log","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","filter","className","to","name","onClick","disabled","initialState","App","state","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f366b5f7.chunk.js","sourcesContent":["import {coursesStateType} from \"./App\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\n\r\ntype coursesType = {\r\n    courses: coursesStateType[]\r\n}\r\n\r\nconst Course = ({courses}:coursesType) =>{\r\n    const {courseId} = useParams<{courseId:string}>()\r\n    return(\r\n        <div>\r\n            {courses.map(el=><div key={el.id}>\r\n                {el.id===+courseId?\r\n                    <div>\r\n                        <div> <b>Description:</b> {el.description}</div>\r\n                        <div> <b>Price:</b> {el.price}</div>\r\n                        <div> <b>Beginning Date:</b> {el.dateOfBeginning}</div>\r\n                    </div>:''}\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\nexport default Course;","import {coursesStateType} from \"./App\";\r\nimport Course from \"./Course\";\r\nimport {Link, Route} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\ntype coursesType = {\r\n    courses: coursesStateType[]\r\n}\r\n\r\nconst Home = ({courses}: coursesType) => {\r\n    const [portionNumber,setPortionNumber] = useState<number>(1)\r\n    const portionSize = 2;\r\n    let pagesCount = Math.ceil(courses.length / portionSize)\r\n    console.log(pagesCount)\r\n\r\n    const pages = []\r\n    for(let i =0; i <= pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize+1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n    return (\r\n        <div>\r\n            {courses.filter((el,i)=> i >= leftPortionPageNumber && i <= rightPortionPageNumber).map(el =>\r\n                <div key={el.id} className={'course'}>\r\n                    <Link  to={`/course/${el.id}`}>\r\n                        <div>{el.name}</div>\r\n                    </Link>\r\n                    <div>{el.description}</div>\r\n                    <div>{el.price}</div>\r\n                    <div>{el.dateOfBeginning}</div>\r\n                </div>\r\n            )}\r\n            {portionNumber > 1 && <button onClick={()=>{setPortionNumber(portionNumber-1)}}>prev</button>}\r\n            {pages.filter(el=> el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n                .map(el=> <button key={el} onClick={()=>setPortionNumber(el)}>{el}</button>)}\r\n            {portionCount >= portionNumber && <button disabled={portionNumber > portionCount} onClick={()=>{setPortionNumber(portionNumber+1)}}>next</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React, {useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport Course from \"./Course\";\nimport Home from \"./Home\";\n\nexport type coursesStateType = {\n  id:number;\n  name:string;\n  description:string;\n  price:number;\n  dateOfBeginning:string;\n}\n\nconst initialState:coursesStateType[] = [\n  {id:1, name:'JS', description:'React', price:100, dateOfBeginning: '10-10-2021'},\n  {id:2, name:'Python', description:'MachineLearning', price:50, dateOfBeginning: '11-10-2021'},\n  {id:3, name:'HTML', description:'Tags', price:80, dateOfBeginning: '12-10-2021'},\n  {id:4, name:'CSS', description:'Styles', price:105, dateOfBeginning: '13-10-2021'},\n  {id:5, name:'TS', description:'Types', price:101, dateOfBeginning: '14-10-2021'},\n  {id:6, name:'Java', description:'LearnJava', price:1000, dateOfBeginning: '15-10-2021'},\n]\n\nfunction App() {\n\n  const [state, setState] = useState<coursesStateType[]>(initialState)\n\n  return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route path=\"/home\">\n              <Home courses={state}/>\n            </Route>\n            <Route path=\"/course/:courseId\">\n              <Course courses={state}/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}