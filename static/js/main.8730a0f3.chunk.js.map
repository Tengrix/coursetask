{"version":3,"sources":["Paginator.module.css","SearchImg.module.css","Course.tsx","Courses.tsx","Pagination.tsx","Home.tsx","SearchImg.tsx","ImgPagination.tsx","NewCourse.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Course","course","changePrice","changeDescription","changeDate","useState","edit","setEdit","price","newPrice","setNewPrice","description","newDes","setNewDes","dateOfBeginning","newDate","setNewDate","className","value","onChange","event","currentTarget","type","onClick","id","Courses","courses","courseId","useParams","map","el","Pagination","editCourse","portionNumber","setPortionNumber","pagesCount","Math","ceil","length","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","filter","to","src","picOfCourse","alt","name","Home","setSortType","e","target","SearchImg","images","getPic","s","newCourseImg","urls","small","ImgPagination","pageCount","currentPage","portionSize","onPageChanged","pic","title","totalCountOfImg","paginator","btn","selectedPage","NewCourse","addCourse","uploadPic","find","listOfImg","setTitle","setCourse","setPrice","des","setDes","date","setDate","setCurrentPage","defaultValue","aria-label","aria-describedby","placeholder","disabled","img","pageNumber","per_page","App","state","setState","sortType","setFind","setTotalCountOfImg","setListOfImg","useEffect","sort","a","b","Date","sortByPrice","style","color","path","newArr","newArray","t","FormData","append","axios","get","then","res","data","results","total","catch","err","console","log","newCourse","random","newPic","setPic","full","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8730a0f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1na2p\",\"paginator\":\"Paginator_paginator__1BjiY\",\"pageNumber\":\"Paginator_pageNumber__1dTYK\",\"btn\":\"Paginator_btn__3qKQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newCourseImg\":\"SearchImg_newCourseImg__2abK_\"};","import {coursesStateType} from \"./App\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\ntype courseType = {\r\n    course: coursesStateType;\r\n    changePrice: (value: number, id: number) => void;\r\n    changeDescription: (description: string, id: number) => void;\r\n    changeDate: (date: string, id: number) => void;\r\n}\r\n\r\nconst Course = ({course, changePrice, changeDescription, changeDate}: courseType) => {\r\n    const [edit, setEdit] = useState<boolean>(false)\r\n    const [newPrice, setNewPrice] = useState<number>(course.price)\r\n    const [newDes, setNewDes] = useState<string>(course.description)\r\n    const [newDate, setNewDate] = useState<string>(course.dateOfBeginning)\r\n    const saveHandler = () => {\r\n        changePrice(newPrice, course.id)\r\n        changeDescription(newDes, course.id)\r\n        changeDate(newDate, course.id)\r\n        setEdit(false)\r\n    }\r\n    return (\r\n        <div className={'course'}>\r\n            <div>\r\n                <div><b>Description:</b> {edit ? <div> <textarea value={newDes}\r\n                                                                 onChange={event => setNewDes(event.currentTarget.value)}/>\r\n                    </div> : course.description}\r\n                </div>\r\n                <div><b>Price:</b> {edit ? <input type=\"number\" value={newPrice}\r\n                                                  onChange={event => setNewPrice(+event.currentTarget.value)}/> : newPrice}$\r\n                </div>\r\n                <div><b>Beginning Date:</b> {edit ? <input type=\"text\" value={newDate}\r\n                                                           onChange={event => setNewDate(event.currentTarget.value)}/> : newDate}\r\n                </div>\r\n            </div>\r\n            <button onClick={() => setEdit(!edit)}>edit</button>\r\n            <button onClick={saveHandler}>save</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Course;","import {coursesStateType} from \"./App\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Course from './Course'\r\n\r\ntype coursesType = {\r\n    courses: coursesStateType[];\r\n    changePrice:(value:number, id:number)=>void;\r\n    changeDescription:(description:string, id:number)=>void;\r\n    changeDate: (date: string, id: number) => void;\r\n}\r\n\r\nconst Courses = ({courses,changePrice,changeDescription,changeDate}:coursesType) =>{\r\n    const {courseId} = useParams<{courseId:string}>()\r\n    return(\r\n        <div className={'course'}>\r\n            {courses.map(el=><div key={el.id}>\r\n                {el.id===+courseId &&\r\n                    <Course course={el}\r\n                            changePrice={changePrice}\r\n                            changeDescription={changeDescription}\r\n                            changeDate={changeDate}\r\n                    />}\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\nexport default Courses;","import {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {coursesStateType} from \"./App\";\r\nimport s from 'Paginator.module.css'\r\n\r\ntype paginationType = {\r\n    courses: coursesStateType[];\r\n    editCourse: (id: number) => void;\r\n}\r\nconst Pagination = ({courses, editCourse}: paginationType) => {\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const portionSize = 2;\r\n    let pagesCount = Math.ceil(courses.length / portionSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {courses.filter((el, i) => i >= leftPortionPageNumber - 1 && i <= rightPortionPageNumber - 1).map(el =>\r\n                    <div className=\"col\" key={el.id}>\r\n                        <div  className={'course'}>\r\n                            <Link to={`/course/${el.id}`}>\r\n                                <img src={`${el.picOfCourse}`} alt=\"\"/>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <b>Name of course:</b>\r\n                            {el.name}\r\n                            <div><b>Course description:</b> {el.description}</div>\r\n                            <div><b>Course price:</b> {el.price}$</div>\r\n                            <div><b>Date of beginning:</b> {el.dateOfBeginning}</div>\r\n                            <div>\r\n                                <button onClick={() => editCourse(el.id)}>del</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={'pagination'}>\r\n                {portionNumber > 1 && <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>prev</button>}\r\n                {pages.map(el => <button className={el === portionNumber ? 'pages' : ''} key={el}\r\n                                         onClick={() => setPortionNumber(el)}>{el}</button>)}\r\n                {portionCount >= portionNumber && <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>next</button>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination","import {coursesStateType} from \"./App\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Pagination from \"./Pagination\";\r\n\r\ntype coursesType = {\r\n    courses: coursesStateType[];\r\n    setSortType: (e: string) => void;\r\n    editCourse:(id:number)=>void;\r\n}\r\nconst Home = ({courses, setSortType,editCourse}: coursesType) => {\r\n    return (\r\n        <div>\r\n            <div className={'sort'}>\r\n                Sort by: <select onChange={(e) => setSortType(e.target.value)}>\r\n                <option value={'price-high'}>Price(high-low)</option>\r\n                <option value={'price-low'}>Price(low-high)</option>\r\n                <option value={'date'}>Newest</option>\r\n            </select>\r\n            </div>\r\n            <Pagination\r\n                editCourse={editCourse}\r\n                courses={courses}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import {DataType} from \"./NewCourse\";\r\nimport s from './SearchImg.module.css'\r\ntype ImgType = {\r\n    images:DataType;\r\n    getPic:(id:string)=>void;\r\n}\r\nconst SearchImg =  ({images,getPic}:ImgType) => {\r\n    return(\r\n\r\n        <span >\r\n            <img className={s.newCourseImg} onClick={()=>getPic(images.id)} src={images.urls.small} alt=\"\"/>\r\n\r\n        </span>\r\n    )\r\n}\r\nexport default SearchImg;","import {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\ntype ImgPaginationType = {\r\n    pageCount:number;\r\n    currentPage:number;\r\n    portionSize:number\r\n    onPageChanged:(img: string, title: string, pageNumber: number, per_page:number)=>void;\r\n    title:string;\r\n    pic?:File;\r\n    totalCountOfImg:number;\r\n}\r\nconst ImgPagination = ({pageCount,currentPage,portionSize,onPageChanged,pic,title,totalCountOfImg}: ImgPaginationType) => {\r\n    let pagesCount = Math.ceil(totalCountOfImg / pageCount)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber-1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return(\r\n        <div className={s.paginator}>\r\n            <div>\r\n                {portionNumber > 1 &&\r\n                <button className={s.btn} onClick={()=> setPortionNumber(portionNumber-1)}> PREV</button>}\r\n                {pages.filter(el=>el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n                    .map((el) => {\r\n                        return <span key={el}>\r\n                        <button onClick={()=>onPageChanged(`${pic}`,title,el, pageCount)} className= {currentPage === el ? s.selectedPage : ''}>{el}</button>\r\n                    </span>\r\n                    })}\r\n                {portionCount > portionNumber &&\r\n                <button className={s.btn} onClick={()=> setPortionNumber(portionNumber+1)}>NEXT</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ImgPagination;","import {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchImg from \"./SearchImg\";\r\nimport ImgPagination from \"./ImgPagination\";\r\nexport type DataType = {\r\n    \"id\": string,\r\n    \"created_at\": string,\r\n    \"updated_at\": string,\r\n    \"promoted_at\": string,\r\n    \"width\": number,\r\n    \"height\": number,\r\n    \"color\": string,\r\n    \"blur_hash\": string,\r\n    \"description\": string,\r\n    \"alt_description\": string,\r\n    \"urls\": {\r\n        \"raw\": string,\r\n        \"full\": string,\r\n        \"regular\": string,\r\n        \"small\": string,\r\n        \"thumb\": string\r\n    }\r\n}\r\ntype NewCourseType = {\r\n    addCourse: (name: string, price: number, date: string, description: string, pic: string) => void\r\n    uploadPic:(img: string, title: string, pageNumber: number, per_page:number)=>void;\r\n    find:boolean;\r\n    totalCountOfImg:number;\r\n    listOfImg : DataType[];\r\n    getPic:(id:string) => void;\r\n}\r\n\r\n\r\nconst NewCourse = ({addCourse,uploadPic,find,totalCountOfImg,listOfImg,getPic}: NewCourseType) => {\r\n    const [title, setTitle] = useState<string>('')\r\n    const [course, setCourse] = useState<string>('')\r\n    const [price, setPrice] = useState<number>(0)\r\n    const [des, setDes] = useState<string>('')\r\n    const [date, setDate] = useState<string>('')\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n    const [pic, setPic] = useState<File>()\r\n    const per_page = 6\r\n\r\n\r\n    const onPageChanged = (img: string, title: string, pageNumber: number, per_page:number) =>{\r\n        setCurrentPage(pageNumber)\r\n        uploadPic(img,title,pageNumber,per_page)\r\n    }\r\n    return (\r\n        <div className={'newCourse'}>\r\n            <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Course name</span>\r\n                <input defaultValue={course} onChange={(event => setCourse(event.currentTarget.value))} type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\"\r\n                       aria-describedby=\"inputGroup-sizing-sm\"/>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">Course price</span>\r\n                <input defaultValue={price} onChange={(event => setPrice(+event.currentTarget.value))} type=\"text\" className=\"form-control\"\r\n                       aria-label=\"Dollar amount (with dot and two decimal places)\"/>\r\n                <span className=\"input-group-text\">$</span>\r\n                <span className=\"input-group-text\">0.00</span>\r\n            </div>\r\n            <div className=\"input-group input-group-sm mb-3\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Course date</span>\r\n                <input defaultValue={date} onChange={(event => setDate(event.currentTarget.value))} type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\"\r\n                       aria-describedby=\"inputGroup-sizing-sm\"/>\r\n            </div>\r\n            <div>\r\n                <span className=\"input-group-text\">Course description</span>\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <textarea className=\"form-control\" aria-label=\"With textarea\" defaultValue={des} onChange={(event => setDes(event.currentTarget.value))}/>\r\n            </div>\r\n\r\n            <div>\r\n                Search image\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n                <input onChange={(event => setTitle(event.currentTarget.value))} type=\"text\" className=\"form-control\" placeholder=\"Course image\"\r\n                       aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\r\n                    <button disabled={title === ''} onClick={() => uploadPic(`${pic}`, title, currentPage,per_page )} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Get Images</button>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => addCourse(course, price, date, des, `${pic}`)}>add</button>\r\n            <div>\r\n                Chose the course image below:\r\n            </div>\r\n            {find?\r\n                <ImgPagination\r\n                    currentPage={currentPage}\r\n                    pageCount={per_page}\r\n                    onPageChanged={onPageChanged}\r\n                    totalCountOfImg={totalCountOfImg}\r\n                    portionSize={5}\r\n                    title={title}\r\n                    pic={pic}\r\n                />:''\r\n            }\r\n            {listOfImg.map((el: DataType) => <span key={el.id}>\r\n                    <SearchImg\r\n                        getPic={getPic}\r\n                        images={el}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default NewCourse;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport Courses from \"./Courses\";\nimport Home from \"./Home\";\nimport NewCourse, {DataType} from \"./NewCourse\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from \"axios\";\n\nexport type coursesStateType = {\n    id: number;\n    name: string;\n    description: string;\n    price: number;\n    dateOfBeginning: string;\n    picOfCourse: string;\n}\nfunction App() {\n    const [state, setState] = useState<coursesStateType[]>([\n        {\n            id: 1,\n            name: 'JS',\n            description: 'React',\n            price: 100,\n            dateOfBeginning: '2021-06-28',\n            picOfCourse: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/1200px-Unofficial_JavaScript_logo_2.svg.png'\n        },\n        {\n            id: 2,\n            name: 'Python',\n            description: 'MachineLearning',\n            price: 50,\n            dateOfBeginning: '2020-05-8',\n            picOfCourse: 'https://roboschool.pro/content/uploads/2020/06/python-940x940.png'\n        },\n        {\n            id: 3,\n            name: 'HTML',\n            description: 'Tags',\n            price: 80,\n            dateOfBeginning: '2021-06-2',\n            picOfCourse: 'https://media.proglib.io/wp-uploads/2019/03/html-output.jpg'\n        },\n        {\n            id: 4,\n            name: 'CSS',\n            description: 'Styles',\n            price: 105,\n            dateOfBeginning: '2021-06-11',\n            picOfCourse: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/CSS3_logo_and_wordmark.svg/1200px-CSS3_logo_and_wordmark.svg.png'\n        },\n        {\n            id: 5,\n            name: 'TS',\n            description: 'Types',\n            price: 101,\n            dateOfBeginning: '2020-10-5',\n            picOfCourse: 'https://res.cloudinary.com/practicaldev/image/fetch/s--6McQQU7i--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/j4hwcf7lntmqyha7ras5.png'\n        },\n        {\n            id: 6,\n            name: 'Java',\n            description: 'LearnJava',\n            price: 1000,\n            dateOfBeginning: '2021-10-17',\n            picOfCourse: 'https://www.comnews.ru/sites/default/files2019/articles/2021-02/Java.jpg'\n        },\n    ])\n    const [sortType, setSortType] = useState('price-high');\n    const [find, setFind] = useState<boolean>(false)\n    const [totalCountOfImg, setTotalCountOfImg] = useState<number>(1)\n    const [listOfImg, setListOfImg] = useState([])\n    let clientId = 'TjmARGkpjfymTRCvG-FSEMuhTEz4V6_oSpITSpqmmEg'\n\n\n    useEffect(() => {\n        const sortByPrice = (type: any) => {\n            switch (sortType) {\n                case 'price-high':\n                    setState([...state].sort((a, b) => a.price > b.price ? -1 : 1))\n                    break;\n                case 'price-low':\n                    setState([...state].sort((a, b) => a.price < b.price ? -1 : 1))\n                    break;\n                case 'date':\n                    setState([...state].sort((a, b) => {\n                        return +new Date(a.dateOfBeginning) - +new Date(b.dateOfBeginning)\n                    }))\n                    break;\n                default:\n                    return state\n            }\n        }\n        sortByPrice(sortType)\n    }, [sortType])\n\n    const editCourse = (id: number) => {\n        const newArr = [...state].filter((el) => el.id !== id)\n        setState(newArr)\n    }\n    const changePrice = (value: number, id: number) => {\n        let newArray = state\n            .map(t => t.id === id ? {...t, price: value} : t);\n        setState(newArray)\n    }\n    const changeDescription = (description: string, id: number) => {\n        let newArray = state\n            .map(t => t.id === id ? {...t, description} : t);\n        setState(newArray)\n    }\n    const changeDate = (date: string, id: number) => {\n        let newArray = state\n            .map(t => t.id === id ? {...t, dateOfBeginning: date} : t);\n        setState(newArray)\n    }\n    const addCourse = (name: string, price: number, date: string, description: string, pic: string) => {\n        let newCourse: coursesStateType = {\n            id: Math.random(),\n            name,\n            price,\n            picOfCourse: pic,\n            dateOfBeginning: date,\n            description\n        }\n        setState([...state, newCourse])\n    }\n    const uploadPic = (img: string, title: string, pageNumber: number, per_page:number) => {\n        if (img) {\n            const data = new FormData()\n            data.append('image', img)\n            axios.get(`https://api.unsplash.com/search/photos?page=${pageNumber}&per_page=${per_page}&query=${title}&client_id=${clientId}`)\n                .then(res => {\n                    debugger\n                    setListOfImg(res.data.results)\n                    setTotalCountOfImg(res.data.total)\n                })\n                .catch(err => console.log(err));\n        }\n        setFind(true)\n    }\n    const getPic = (id: string) => {\n        const newPic = listOfImg.filter((el: DataType) => el.id === id)\n        setListOfImg(newPic)\n        // @ts-ignore\n        setPic(newPic[0].urls.full)\n    }\n    return (\n        <div className={'App'}>\n            <Router>\n                <div className={'imgPlace'}>\n                    <img className=\"img-fluid\" src=\"https://media.foxford.ru/wp-content/uploads/2020/02/%D0%B8%D1%82%D0%B2%D1%83%D0%B7.jpg\"\n                         alt=\"\"/>\n                    <h1 style={{color:\"black\"}} className=\"display-4\">\n                        IT-Courses\n                    </h1>\n                    <span>\n                    <nav>\n                        <Link to=\"/home\" className={'mainMenu'}>Home</Link>\n                    </nav>\n                    <nav>\n                        <Link to=\"/new-course\" className={'mainMenu'}>New Course</Link>\n                    </nav>\n                        </span>\n                </div>\n                <div>\n                    <Switch>\n                        <Route path=\"/home\">\n                            <Home\n                                setSortType={setSortType}\n                                courses={state}\n                                editCourse={editCourse}\n                            />\n                        </Route>\n                        <Route path=\"/course/:courseId\">\n                            <Courses\n                                changePrice={changePrice}\n                                changeDate={changeDate}\n                                courses={state}\n                                changeDescription={changeDescription}\n                            />\n                        </Route>\n                        <Route path={'/new-course'}>\n                            <NewCourse\n                                uploadPic={uploadPic}\n                                addCourse={addCourse}\n                                find={find}\n                                totalCountOfImg={totalCountOfImg}\n                                listOfImg={listOfImg}\n                                getPic={getPic}\n                            />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}